name: .NET

on:
  push:
    tags:
      - "vRelease*"
  workflow_dispatch:
# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    # runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup .NET 5
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 5.0.x
    
    - name: Setup .NET 7
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: test run
      run: |
        # where.exe git.exe
        which git
        echo start git0
        git log --merges --pretty='%an|%cs|%H|%s'
        echo end git0
        # git for-each-ref --format='%(committerdate:short) %00  %(authorname) %(refname) %(subject)' --sort=committerdate --merged=HEAD
        # git for-each-ref --sort=committerdate refs/heads/ --format='%(committerdate:short) %00 %(objectname) %(authorname) %(refname) %(subject)'
        # echo start git1
        # git for-each-ref --sort=committerdate refs/heads/ --format='%(authorname)|%(committerdate:short)|%(objectname)||%(refname)|%(subject)'
        # echo end git1
        # echo start git2
        # git for-each-ref --sort=committerdate --format='%(authorname)|%(committerdate:short)|%(objectname)||%(refname)|%(subject)'
        # echo end git2
        cd src 
        cd AMS
        dotnet restore
        dotnet build 
        dotnet run --project AMSConsole
        
    - name: build WebAPI to have test
      # if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        cd src 
        cd AMS
        # cd MVCVerif
        # echo 'now publish mvc'
        # dotnet publish -o ../publish/publishMVC -r win-x64 --self-contained true -p:PublishSingleFile=false -p:PublishTrimmed=true 
        # cd ..
        cd AMSWebAPIVerif
        echo 'now publish webapi'
        dotnet publish -o ../publish/publishWebAPI -r win-x64 --self-contained true -p:PublishSingleFile=false -p:PublishTrimmed=true 

    - name: create package
      # if: ${{ github.ref == 'refs/heads/main' }}
      run: |
        cd src 
        cd AMS
        dotnet tool restore
        # dotnet pwsh readme.ps1
        # dotnet pwsh setVersion.ps1
        echo 'now aop'
        # dotnet pwsh AOPMethod.ps1
        dotnet clean  
        dotnet build
        echo 'now pack'
        dotnet pack AMS_Base/AMS_Base.csproj    -o ${{github.workspace}}/src/nugetPackages --include-symbols --include-source 
        dotnet pack AMS/AMS.csproj              -o ${{github.workspace}}/src/nugetPackages --include-symbols --include-source
        dotnet pack AMSWebAPI/AMSWebAPI.csproj  -o ${{github.workspace}}/src/nugetPackages --include-symbols --include-source


    - name: 'Upload nuget'
      # if: ${{ github.ref == 'refs/heads/main' }}
      uses: actions/upload-artifact@v2
      with:
        name: Nuget_${{github.run_number}}
        path: src/nugetPackages
        retention-days: 1
  
    # - name: 'Upload example'
    #   # if: ${{ github.ref == 'refs/heads/main' }}
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: Example_${{github.run_number}}
    #     path: src/AMS/publish
    #     retention-days: 1

    - name: push to nuget
      run: |
        
        dotnet nuget push "${{github.workspace}}/src/nugetPackages/*symb*.*pkg" --api-key  ${{ secrets.NUGETAPIKEY }} --source https://api.nuget.org/v3/index.json
  
    