<style>
table {
  font-family: arial, sans-serif;
  border-collapse: collapse;
  width: 100%;
}

td {
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
}

th{
background-color: black;
  color: white;
  border: 1px solid #dddddd;
  text-align: left;
  padding: 8px;
  }
tr:nth-child(even) {
  background-color: #dddddd;
}
</style>

{%~ int i=1; ~%}
{%~

var colors = new string[]{
	"blue",
	"green",
	"maroon",
	"purple",
	"olive",
	"magenta",
	"red"
	
	
};
/*
for(int j=1;j<123;j++){
var ams1=new AMS_Base.AboutMySoftware();
ams1.DateGenerated = DateTime.Now.AddDays(j);
AMS_Base.AboutMySoftware.AddDefinition("Andrei"+j,ams1);
}
*/
var nrColors= colors.Length;
var ColorForDates=new System.Collections.Generic.Dictionary<DateTime,string>();
foreach(var dateIn in AMS_Base.AboutMySoftware.Dates ){
	if(ColorForDates.ContainsKey(dateIn))
		continue;
	//var hash = dateIn.GetHashCode();
	//ColorForDates.Add(dateIn,  $"#{hash:X8}");
	var nr = ColorForDates.Count % nrColors;
	ColorForDates.Add(dateIn,colors[nr]);
}

~%}

<table>
<tr>
<th>Nr</td>
<th>Component</th>
<th>Date</th>
<th>CI Build</th>
<th>Project/Releases</th>
<SC>
</tr>
{%~
var defs=System.Linq.Enumerable.ToArray(System.Linq.Enumerable.OrderByDescending(AMS_Base.AboutMySoftware.AllDefinitions,it=>it.Value.DateGenerated ));
%}
{%~ i=1; ~%}
{%~ foreach(var item in defs){

var color = ColorForDates[item.Value.DateGenerated.Date];
%}
<tr>
<td valign="top">{% i++ %}</td>
<td valign="top">{% item.Key %} </td>
<td valign="top"  style='color:{% color %}'>{% item.Value.DateGenerated %}  </td>
<td valign="top">
SourceControl : {% item.Value.CISourceControl %}
<br />
Commit : <a href='{% item.Value.SourceCommit %}' target='_blank'> {% item.Value.CommitId %}</a> 
<br />
Repo :<a href='{% item.Value.RepoUrl  %}' target='_blank'> {% item.Value.RepoUrl %} </a> 
<br />
User : {% item.Value.User %} </a> 
</td>
<td valign="top">
{%~ if ((item.Value.Version??"").Length > 0) { %}
Version: {% item.Value.Version  %} 
{%~ } %}
{%~ if ((item.Value.Authors  ??"").Length > 0) { %}
Authors: {% item.Value.Authors  %} 
{%~ } %}
{%
if((item.Value.Versions?.Length??0)>0) {
var vers=System.Linq.Enumerable.ToArray(System.Linq.Enumerable.OrderByDescending(item.Value.Versions,it=>it.ISODateTime ));

%}
<button type="button" class="collapsible" >See Versions {% vers.Length %}</button>
<table style="display:none"  >
<tr>
<th>Nr</td>
<th>Name/Date</th>
<th>Details</th>
</tr>

{%~ int verNr=1; ~%}

{%~ foreach(var ver in vers){ 
%}
<tr>
<td valign="top">{% (i-1) %}.{% verNr++ %}</td>
<td valign="top">
<b>{% ver.Name %}</b> at {% ver.ISODateTime.ToString("dd MMM yyyy") %}
</td>
<td>
{%~ if((ver.releaseDatas?.Length??0)>0) { 

var rdAll=System.Linq.Enumerable.ToArray(System.Linq.Enumerable.OrderByDescending(ver.releaseDatas,it=>it.ReleaseDate ));
int rdNr = 1;
%}
<button type="button" class="collapsible" >See commits {% rdAll.Length %}</button>
<table style="display:none"  >
<tr>
<th>Nr</th>
<th>Details</th>
<th>CommitId</th>

{%~ foreach(var rdItem in rdAll) { %}
<tr>
<td valign="top">{% (i-1) %}.{% (verNr-1) %}.{% rdNr++ %}</td>
<td valign="top">Made by <b> {% rdItem.Author %} </b> on {% rdItem.ReleaseDate.ToString("dd MMM yyyy") %} with text
<br /><i>
{% rdItem.Subject %}</i>
</td>
<td valign="top">{% rdItem.CommitId %}</td>
</tr>
{%~  }; %}


</table>

{%~  } %}
</td>
</tr>

{%~ }; %}

</table>

{%~ 
};
};
%}

</table>

<p>
Json at <a href='/ams/all' target='_blank'>/ams/all</a>
</p>
<p><small><a href='https://github.com/ignatandrei/RSCG_AMS/' target='_blank'>https://github.com/ignatandrei/RSCG_AMS/</a></small></p>


<script>
var coll = document.getElementsByClassName("collapsible");
var i;

for (i = 0; i < coll.length; i++) {
  coll[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var content = this.nextElementSibling;
    if (content.style.display === "block") {
      content.style.display = "none";
    } else {
      content.style.display = "block";
    }
  });
}
</script>